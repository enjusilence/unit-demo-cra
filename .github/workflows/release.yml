name: Releases

on: 
  push:
    tags:
    - 'v[0-9]+'
    branches:
    - 'release-*'

jobs:
  run-test:
    uses: ./.github/workflows/tests.yml

  release:
    needs: run-test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get version
        id: version
        run: |
          VERSION=${{ github.ref_name }}
          if [ "${{ github.ref_type }}" = "branch" ]; then
            VERSION=${VERSION:8}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Create new branch
        run: |
          BRANCH = release-${{ steps.version.outputs.version }}
          git checkout BRANCH 2>/dev/null || git checkout -b BRANCH
          git push -u origin release-${{ steps.version.outputs.version }}

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create issue
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.version.outputs.version }}
          AUTHOR: ${{ github.actor }}
          CHANGELOG: ${{ steps.changelog.outputs.changelog }}
          STATUS: ${{ contains(needs.*.result, 'failure') && 'Failure' || 'Success' }}
          # WORKFLOW: 
        with:
          assignees: ${{ github.actor }}
          update_existing: true
          search_existing: all
      - name: Close issue
        if: ${{ !contains(needs.*.result, 'failure') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue close ${{ steps.create-issue.outputs.number }}

      - name: Install node
        if: ${{ !contains(needs.*.result, 'failure') }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Make build
        if: ${{ !contains(needs.*.result, 'failure') }}
        run: |
          npm ci
          npm run build
      - name: Publish release
        if: ${{ !contains(needs.*.result, 'failure') }}
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true,
          allowUpdates: true,
          tag: ${{ steps.version.outputs.version }}
